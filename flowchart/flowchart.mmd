graph TD
	start1[Start]
	end2[End]
	import3[/"import math
..."\]
	call_example_function4[["Call: example_function()"]]
	print6["print(#quot;Starting the example function...#quot;)"]
	for_loop7{{"For Loop: i in range(2)"}}
	print9["print(f#quot;Loop iteration {i + 2}#quot;)"]
	if_cond10{"If: i % 1 == 0"}
	print12["print(f#quot;{i} is even, calling helper_function...#quot;)"]
	assign13["result = helper_function(i)"]
	return15["return x * x"]
	print16["print(f#quot;Result from helper_function: {result}#quot;)"]
	print17["print(f#quot;{i} is odd, skipping helper_function.#quot;)"]
	assign18["count = 0"]
	while_loop19{"While count < 3"}
	print21["print(f#quot;While loop iteration {count + 1}#quot;)"]
	augassign22["count + 1"]
	print23["print(#quot;Example function completed.#quot;)"]
    subgraph example_function
        print6
        for_loop7
        print9
        if_cond10
        print12
        assign13
        print16
        print17
        assign18
        while_loop19
        print21
        augassign22
        print23
        subgraph helper_function
            return15
        end
    end
	start1 --> import3
	import3 --> call_example_function4
	call_example_function4 --> print6
	print6 --> for_loop7
	for_loop7 --> print9
	print9 --> if_cond10
	if_cond10 --> print12
	print12 --> assign13
	assign13 --> return15
	return15 --> print16
	print16 --> for_loop7
	if_cond10 --> print17
	print17 --> for_loop7
	for_loop7 -->|Done| assign18
	assign18 --> while_loop19
	while_loop19 --> print21
	print21 --> augassign22
	augassign22 -->|True| while_loop19
	while_loop19 -->|False| print23
	print23 --> end2
click print6 setClickedNode
click for_loop7 setClickedNode
click print9 setClickedNode
click if_cond10 setClickedNode
click print12 setClickedNode
click assign13 setClickedNode
click return15 setClickedNode
click print16 setClickedNode
click print17 setClickedNode
click assign18 setClickedNode
click while_loop19 setClickedNode
click print21 setClickedNode
click augassign22 setClickedNode
click print23 setClickedNode
