graph TD
	start1[Start]
	end2[End]
	print3["print(f`Result: {add(multiply(2, 3), multiply(4, 5))}`)"]
	call_add_14[["Call: add(multiply(2, 3), multiply(4, 5))"]]
	assign6["result = a + b\nprint(f`Adding {a} + {b}`)"]
	return7["return result"]
	call_multiply_18[["Call: multiply(2, 3)"]]
	assign10["result = a * b\nprint(f`Multiplying {a} * {b}`)"]
	return11["return result"]
	call_multiply_212[["Call: multiply(4, 5)"]]
	assign14["result = a * b\nprint(f`Multiplying {a} * {b}`)"]
	return15["return result"]
    print3["print(f`Result: {add(multiply(2, 3), multiply(4, 5))}`)"]
    call_add_14[["Call: add(multiply(2, 3), multiply(4, 5))"]]
    call_multiply_18[["Call: multiply(2, 3)"]]
    call_multiply_212[["Call: multiply(4, 5)"]]
subgraph "Function: add() - Call 1"
    assign6["result = a + b\nprint(f`Adding {a} + {b}`)"]
    return7["return result"]
end
subgraph "Function: multiply() - Call 1"
    assign10["result = a * b\nprint(f`Multiplying {a} * {b}`)"]
    return11["return result"]
end
subgraph "Function: multiply() - Call 2"
    assign14["result = a * b\nprint(f`Multiplying {a} * {b}`)"]
    return15["return result"]
end
    	start1 --> print3
    	print3 --> call_add_14
    	call_add_14 --> assign6
    	assign6 --> return7
    	return7 --> call_multiply_18
    	call_multiply_18 --> assign10
    	assign10 --> return11
    	return11 --> call_multiply_212
    	call_multiply_212 --> assign14
    	assign14 --> return15
    	return15 --> end2

