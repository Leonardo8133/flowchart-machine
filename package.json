{
  "name": "flowchart-machine",
  "displayName": "Flowchart Machine",
  "description": "An extension that helps you to build your code flowchart",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:extension.generateFlowchart",
    "onLanguage:python"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.generateFlowchart",
        "title": "Generate Python Flowchart",
        "category": "Flowchart"
      },
      {
        "command": "flowchartMachine.config.openSettings",
        "title": "Open Flowchart Machine Settings",
        "category": "Flowchart"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "extension.generateFlowchart",
          "when": "editorLangId == python"
        }
      ],
      "editor/context": [
        {
          "command": "extension.generateFlowchart",
          "when": "editorLangId == python",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Flowchart Machine",
      "properties": {
        "flowchartMachine.general.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save flowcharts after generation"
        },
        "flowchartMachine.nodes.processTypes.functions": {
          "type": "boolean",
          "default": true,
          "description": "Process function definitions"
        },
        "flowchartMachine.nodes.processTypes.functionCalls": {
          "type": "boolean",
          "default": true,
          "description": "Process function calls"
        },
        "flowchartMachine.nodes.processTypes.assignments": {
          "type": "boolean",
          "default": true,
          "description": "Process variable assignments"
        },
        "flowchartMachine.nodes.processTypes.prints": {
          "type": "boolean",
          "default": true,
          "description": "Process print statements"
        },
        "flowchartMachine.nodes.processTypes.loops": {
          "type": "boolean",
          "default": true,
          "description": "Process loops (for, while)"
        },
        "flowchartMachine.nodes.processTypes.conditionals": {
          "type": "boolean",
          "default": true,
          "description": "Process conditional statements"
        },
        "flowchartMachine.nodes.processTypes.returns": {
          "type": "boolean",
          "default": true,
          "description": "Process return statements"
        },
        "flowchartMachine.nodes.processTypes.imports": {
          "type": "boolean",
          "default": false,
          "description": "Process import statements"
        },
        "flowchartMachine.nodes.processTypes.classes": {
          "type": "boolean",
          "default": true,
          "description": "Process class definitions"
        },
        "flowchartMachine.nodes.processTypes.exceptions": {
          "type": "boolean",
          "default": true,
          "description": "Process exception handling"
        },
        "flowchartMachine.storage.maxSavedFlowcharts": {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "default": 50,
          "description": "Maximum number of saved flowcharts to keep"
        },
        "flowchartMachine.storage.storageLocation": {
          "type": "string",
          "enum": ["workspace", "global"],
          "default": "workspace",
          "description": "Storage location for saved flowcharts"
        },
        "flowchartMachine.storage.includeSourceCode": {
          "type": "boolean",
          "default": true,
          "description": "Include source code with saved flowcharts"
        },
        "flowchartMachine.storage.includeTooltipData": {
          "type": "boolean",
          "default": true,
          "description": "Include tooltip data with saved flowcharts"
        },
        "flowchartMachine.storage.autoCleanupDays": {
          "type": "number",
          "minimum": 1,
          "maximum": 365,
          "default": 30,
          "description": "Auto-cleanup old flowcharts after days"
        },
        "flowchartMachine.storage.export.useCustomPngLocation": {
          "type": "boolean",
          "default": false,
          "description": "Use custom PNG download location instead of Downloads folder"
        },
        "flowchartMachine.storage.export.defaultPngLocation": {
          "type": "string",
          "default": "",
          "description": "Default directory for PNG exports (leave empty for Downloads folder)"
        },
        "flowchartMachine.storage.export.autoIncrementPngVersions": {
          "type": "boolean",
          "default": true,
          "description": "Automatically increment version numbers for PNG files"
        },
        "nodes": {
          "processTypes": {
            "prints": {
              "type": "boolean",
              "default": true,
              "description": "Show print statements in the flowchart"
            },
            "functions": {
              "type": "boolean",
              "default": true,
              "description": "Show function definitions in the flowchart"
            },
            "forLoops": {
              "type": "boolean",
              "default": true,
              "description": "Show for loops in the flowchart"
            },
            "whileLoops": {
              "type": "boolean",
              "default": true,
              "description": "Show while loops in the flowchart"
            },
            "variables": {
              "type": "boolean",
              "default": true,
              "description": "Show variable assignments in the flowchart"
            },
            "ifs": {
              "type": "boolean",
              "default": true,
              "description": "Show if statements in the flowchart"
            },
            "imports": {
              "type": "boolean",
              "default": true,
              "description": "Show import statements in the flowchart"
            },
            "exceptions": {
              "type": "boolean",
              "default": true,
              "description": "Show exception handling in the flowchart"
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:unit": "vscode-test --extensionDevelopmentPath=. --extensionTestsPath=./out/test/suite/index",
    "test:watch": "vscode-test --extensionDevelopmentPath=. --extensionTestsPath=./out/test/suite/index --watch",
    "test:coverage": "npm run compile && npm run test:unit",
    "test:clean": "rimraf test-workspace*",
    "test:all": "npm run pretest && npm run test:unit"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "rimraf": "^5.0.5",
    "typescript": "^5.8.3"
  }
}
